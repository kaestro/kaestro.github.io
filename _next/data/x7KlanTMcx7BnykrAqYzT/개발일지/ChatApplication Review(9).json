{"pageProps":{"postDataJson":{"postName":"2024-04-15-Chat Application review(9)","fullPath":"/home/runner/work/kaestro.github.io/kaestro.github.io/_posts/개발/개발일지/Chat Application 개발일지/2024-04-15-Chat Application review(9).md","category":"개발일지","title":"ChatApplication Review(9)","subtitle":"EnterChat 재설계, logging 기능 구현, routes 패키지 추가","content":"\n## 목차\n\n- [목차](#목차)\n- [배운 점](#배운-점)\n- [진행 내용](#진행-내용)\n- [진행 과정](#진행-과정)\n  - [EnterChat 재설계 및 구현](#enterchat-재설계-및-구현)\n  - [logging 기능 구현](#logging-기능-구현)\n  - [routes 패키지 추가](#routes-패키지-추가)\n  - [chat 테스트 CI에 추가](#chat-테스트-ci에-추가)\n\n---\n\n## 배운 점\n\n1. 혼자서 개발하는 것과 팀으로 개발하는 것의 차이\n2. 잘못된 설계를 재설계하는 방법 및 설계의 중요성\n3. 시스템 구축의 어려움\n4. docker 서비스간 의존성 해소 방법\n5. 문제 발생의 주 원인은 휴먼에러다.\n\n---\n\n## 진행 내용\n\n- EnterChat 재설계 및 구현\n- logging 기능 구현\n- routes 패키지 추가\n- chat 테스트 CI에 추가\n\n---\n\n## 진행 과정\n\n### EnterChat 재설계 및 구현\n\n- **문제**\n  - websocket이 연결되는 방식에 대한 이해 부족에 따른 잘못된 설계\n    - 접속 정보를 request body로 전송\n    - http request로 접속 정보를 전송 후 소켓 연결을 저장해두지 않음\n- **해결**\n  - websocket을 요청할 때 client.do가 아니라 dialer.Dial로 연결해서 connection을 저장\n  - 접속 정보 중 비밀번호를 제외한 정보를 loginSessionInfo라는 새로운 구조체로 전송\n  - 이 때 request body가 아닌 header에 저장\n- **결과**\n  - 채팅 메시지 송수신 확인\n\n### logging 기능 구현\n\n- **문제**\n  - 로그를 print로만 출력하고 있어서 디버깅이 어려움\n  - debug 로그만 남기고 있어, release 버전용 로그 기능이 필요함\n- **해결**\n  - gin의 Logger middleware를 통한 initialization을 구현\n  - 해당 과정에서 logging 패키지 추가\n\n### routes 패키지 추가\n\n- **문제**\n  - routes를 main.go에 직접 작성하고 있어 가독성과 확장성이 떨어짐\n- **해결**\n  - routes 패키지를 추가하여 routes를 분리\n\n### chat 테스트 CI에 추가\n\n- **문제**\n  - 기존에 db와의 연결 혹은 websocket 연결이 필요한 테스트를 CI에 추가하지 않음\n  - 이에 대한 테스트를 수동으로 진행함\n- **해결**\n  - chat 테스트를 CI에 추가\n  - github actions의 로그를 별도의 파일로 저장해서 확인 기능 추가\n\n---\n","layout":"series","recommended":false,"data":{"layout":"series","series":"Chat Application 개발일지","seriesIndex":9,"classes":"wide","title":"ChatApplication Review(9)","subtitle":"EnterChat 재설계, logging 기능 구현, routes 패키지 추가","date":"2024-04-15T00:00:00.000Z","categories":"개발일지"}},"title":"ChatApplication Review(9)","category":"개발일지","categories":["ETC","개발이야기","개발일지","디자인패턴","Algorithm","서평","WeeklyPosts","신변잡기","게임이야기"],"adjacentPosts":{"prev":{"title":"API Server For ChatApplication","category":"개발일지"},"next":{"title":"ChatApplication Review(10)","category":"개발일지"}}},"__N_SSG":true}